{
 "etype": "ImportError",
 "evalue": "ImportError(\"Module import failed for Equipment Type (madkour_maintenance.madkour_maintenance.doctype.equipment_type.equipment_type Error: No module named 'frappe.db')\")",
 "exception": {
  "args": [
   40,
   34,
   77,
   111,
   100,
   117,
   108,
   101,
   32,
   105,
   109,
   112,
   111,
   114,
   116,
   32,
   102,
   97,
   105,
   108,
   101,
   100,
   32,
   102,
   111,
   114,
   32,
   69,
   113,
   117,
   105,
   112,
   109,
   101,
   110,
   116,
   32,
   84,
   121,
   112,
   101,
   32,
   40,
   109,
   97,
   100,
   107,
   111,
   117,
   114,
   46,
   46,
   46,
   113,
   117,
   105,
   112,
   109,
   101,
   110,
   116,
   95,
   116,
   121,
   112,
   101,
   32,
   69,
   114,
   114,
   111,
   114,
   58,
   32,
   78,
   111,
   32,
   109,
   111,
   100,
   117,
   108,
   101,
   32,
   110,
   97,
   109,
   101,
   100,
   32,
   39,
   102,
   114,
   97,
   112,
   112,
   101,
   46,
   100,
   98,
   39,
   41,
   34,
   44,
   41
  ],
  "msg": [
   34,
   77,
   111,
   100,
   117,
   108,
   101,
   32,
   105,
   109,
   112,
   111,
   114,
   116,
   32,
   102,
   97,
   105,
   108,
   101,
   100,
   32,
   102,
   111,
   114,
   32,
   69,
   113,
   117,
   105,
   112,
   109,
   101,
   110,
   116,
   32,
   84,
   121,
   112,
   101,
   32,
   40,
   109,
   97,
   100,
   107,
   111,
   117,
   114,
   46,
   46,
   46,
   113,
   117,
   105,
   112,
   109,
   101,
   110,
   116,
   95,
   116,
   121,
   112,
   101,
   32,
   69,
   114,
   114,
   111,
   114,
   58,
   32,
   78,
   111,
   32,
   109,
   111,
   100,
   117,
   108,
   101,
   32,
   110,
   97,
   109,
   101,
   100,
   32,
   39,
   102,
   114,
   97,
   112,
   112,
   101,
   46,
   100,
   98,
   39,
   41,
   34
  ],
  "name": [
   78,
   111,
   110,
   101
  ],
  "path": [
   78,
   111,
   110,
   101
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   73,
   109,
   112,
   111,
   114,
   116,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'http://mysite.localhost:8000/api/metho...arent=1&cached_timestamp=&_=1681898558364' [GET]>)",
   "dump": {
    "frappe. api": "<module 'frappe.api' from '/workspace/development/frappe-bench/apps/frappe/frappe/api.py'>",
    "frappe.api. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "response": "None"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "64": "",
    "65": "\t\telif request.path.startswith(\"/api/\"):",
    "66": "\t\t\tresponse = frappe.api.handle()",
    "67": "",
    "68": "\t\telif request.path.startswith(\"/backups\"):"
   },
   "lnum": 66
  },
  {
   "call": "()",
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/workspace/development/frappe-bench/apps/frappe/frappe/handler.py'>",
    "frappe.handler. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/api.py",
   "func": "handle",
   "lines": {
    "53": "\tif call == \"method\":",
    "54": "\t\tfrappe.local.form_dict.cmd = doctype",
    "55": "\t\treturn frappe.handler.handle()",
    "56": "",
    "57": "\telif call == \"resource\":"
   },
   "lnum": 55
  },
  {
   "call": "()",
   "dump": {
    "cmd": "'frappe.desk.form.load.getdoctype'",
    "data": "None",
    "global execute_cmd": "<function execute_cmd>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "handle",
   "lines": {
    "36": "",
    "37": "\tif cmd != \"login\":",
    "38": "\t\tdata = execute_cmd(cmd)",
    "39": "",
    "40": "\t# data can be an empty string or list which are valid responses"
   },
   "lnum": 38
  },
  {
   "call": "(cmd='frappe.desk.form.load.getdoctype', from_async=False)",
   "dump": {
    "frappe. call": "<function call>",
    "frappe. form_dict": "{'doctype': 'Equipment Type', 'with_parent': '1'...': '', 'cmd': 'frappe.desk.form.load.getdoctype'}",
    "global frappe": "<module 'frappe' from '/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "method": "<function getdoctype>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "execute_cmd",
   "lines": {
    "74": "\t\tis_valid_http_method(method)",
    "75": "",
    "76": "\treturn frappe.call(method, **frappe.form_dict)",
    "77": "",
    "78": ""
   },
   "lnum": 76
  },
  {
   "call": "(fn=<function getdoctype>, *args=(), **kwargs={'cached_timestamp': '', 'cmd': 'frappe.desk.form.load.getdoctype', 'doctype': 'Equipment Type', 'with_parent': '1'})",
   "dump": {
    "args": "()",
    "fn": "<function getdoctype>",
    "newargs": "{'cached_timestamp': '', 'doctype': 'Equipment Type', 'with_parent': '1'}"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "call",
   "lines": {
    "1471": "\tnewargs = get_newargs(fn, kwargs)",
    "1472": "",
    "1473": "\treturn fn(*args, **newargs)",
    "1474": "",
    "1475": ""
   },
   "lnum": 1473
  },
  {
   "call": "(doctype='Equipment Type', with_parent='1', cached_timestamp='')",
   "dump": {
    "docs": "[]",
    "doctype": "'Equipment Type'",
    "global get_meta_bundle": "<function get_meta_bundle>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/load.py",
   "func": "getdoctype",
   "lines": {
    "76": "",
    "77": "\tif not docs:",
    "78": "\t\tdocs = get_meta_bundle(doctype)",
    "79": "",
    "80": "\tfrappe.response[\"user_settings\"] = get_user_settings(parent_dt or doctype)"
   },
   "lnum": 78
  },
  {
   "call": "(doctype='Equipment Type')",
   "dump": {
    "bundle": "undefined",
    "doctype": "'Equipment Type'",
    "frappe. desk": "<module 'frappe.desk' from '/workspace/developme...rappe-bench/apps/frappe/frappe/desk/__init__.py'>",
    "frappe.desk. form": "<module 'frappe.desk.form' from '/workspace/deve...-bench/apps/frappe/frappe/desk/form/__init__.py'>",
    "frappe.desk.form. meta": "<module 'frappe.desk.form.meta' from '/workspace...appe-bench/apps/frappe/frappe/desk/form/meta.py'>",
    "frappe.desk.form.meta. get_meta": "<function get_meta>",
    "global frappe": "<module 'frappe' from '/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/load.py",
   "func": "get_meta_bundle",
   "lines": {
    "87": "",
    "88": "def get_meta_bundle(doctype):",
    "89": "\tbundle = [frappe.desk.form.meta.get_meta(doctype)]",
    "90": "\tfor df in bundle[0].fields:",
    "91": "\t\tif df.fieldtype in frappe.model.table_fields:"
   },
   "lnum": 89
  },
  {
   "call": "(doctype='Equipment Type', cached=True)",
   "dump": {
    "doctype": "'Equipment Type'",
    "global FormMeta": "<class 'frappe.desk.form.meta.FormMeta'>",
    "meta": "undefined"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py",
   "func": "get_meta",
   "lines": {
    "52": "\t\t\tfrappe.cache().hset(\"form_meta\", doctype, meta.as_dict())",
    "53": "\telse:",
    "54": "\t\tmeta = FormMeta(doctype)",
    "55": "",
    "56": "\tif frappe.local.lang != \"en\":"
   },
   "lnum": 54
  },
  {
   "call": "(self=<FormMeta: Equipment Type>, doctype='Equipment Type')",
   "dump": {
    "self": "<FormMeta: Equipment Type>",
    "self. load_assets": "<bound method FormMeta.load_assets of <FormMeta: Equipment Type>>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py",
   "func": "__init__",
   "lines": {
    "63": "\tdef __init__(self, doctype):",
    "64": "\t\tsuper(FormMeta, self).__init__(doctype)",
    "65": "\t\tself.load_assets()",
    "66": "",
    "67": "\tdef set(self, key, value, *args, **kwargs):"
   },
   "lnum": 65
  },
  {
   "call": "(self=<FormMeta: Equipment Type>)",
   "dump": {
    "self": "<FormMeta: Equipment Type>",
    "self. load_templates": "<bound method FormMeta.load_templates of <FormMeta: Equipment Type>>"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py",
   "func": "load_assets",
   "lines": {
    "83": "\t\t\tself.load_print_formats()",
    "84": "\t\t\tself.load_workflows()",
    "85": "\t\t\tself.load_templates()",
    "86": "\t\t\tself.load_dashboard()",
    "87": "\t\t\tself.load_kanban_meta()"
   },
   "lnum": 85
  },
  {
   "call": "(self=<FormMeta: Equipment Type>)",
   "dump": {
    "global load_doctype_module": "<function load_doctype_module>",
    "module": "undefined",
    "self": "<FormMeta: Equipment Type>",
    "self. name": "'Equipment Type'"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py",
   "func": "load_templates",
   "lines": {
    "257": "\tdef load_templates(self):",
    "258": "\t\tif not self.custom:",
    "259": "\t\t\tmodule = load_doctype_module(self.name)",
    "260": "\t\t\tapp = module.__name__.split(\".\")[0]",
    "261": "\t\t\ttemplates = {}"
   },
   "lnum": 259
  },
  {
   "call": "(doctype='Equipment Type', module='Madkour Maintenance', prefix='', suffix='')",
   "dump": {
    "\"Module import failed for {0} ({1})\".format": "undefined",
    "builtin ImportError": "<class 'ImportError'>",
    "builtin str": "<class 'str'>",
    "doctype": "'Equipment Type'",
    "e": "undefined",
    "module_name": "'madkour_maintenance.madkour_maintenance.doctype.equipment_type.equipment_type'"
   },
   "file": "/workspace/development/frappe-bench/apps/frappe/frappe/modules/utils.py",
   "func": "load_doctype_module",
   "lines": {
    "243": "\t\t\tdoctype_python_modules[key] = frappe.get_module(module_name)",
    "244": "\texcept ImportError as e:",
    "245": "\t\traise ImportError(",
    "246": "\t\t\t\"Module import failed for {0} ({1})\".format(doctype, module_name + \" Error: \" + str(e))",
    "247": "\t\t)"
   },
   "lnum": 245
  }
 ],
 "locals": {
  "app": "madkour_maintenance",
  "doctype": "Equipment Type",
  "key": "('madkour_maintenance', 'Equipment Type', '', '')",
  "module": "Madkour Maintenance",
  "module_name": "madkour_maintenance.madkour_maintenance.doctype.equipment_type.equipment_type",
  "prefix": "",
  "suffix": ""
 },
 "pyver": "Python 3.9.9: /workspace/development/frappe-bench/env/bin/python (prefix: /workspace/development/frappe-bench/env)",
 "timestamp": "2023-04-19 11:33:16.250354",
 "traceback": "Traceback (most recent call last):\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/modules/utils.py\", line 243, in load_doctype_module\n    doctype_python_modules[key] = frappe.get_module(module_name)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py\", line 1205, in get_module\n    return importlib.import_module(modulename)\n  File \"/home/frappe/.pyenv/versions/3.9.9/lib/python3.9/importlib/__init__.py\", line 127, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 680, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n  File \"/workspace/development/frappe-bench/apps/madkour_maintenance/madkour_maintenance/madkour_maintenance/doctype/equipment_type/equipment_type.py\", line 2, in <module>\n    from frappe.db import Document\nModuleNotFoundError: No module named 'frappe.db'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/app.py\", line 66, in application\n    response = frappe.api.handle()\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/api.py\", line 55, in handle\n    return frappe.handler.handle()\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/handler.py\", line 38, in handle\n    data = execute_cmd(cmd)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/handler.py\", line 76, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/__init__.py\", line 1473, in call\n    return fn(*args, **newargs)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/load.py\", line 78, in getdoctype\n    docs = get_meta_bundle(doctype)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/load.py\", line 89, in get_meta_bundle\n    bundle = [frappe.desk.form.meta.get_meta(doctype)]\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py\", line 54, in get_meta\n    meta = FormMeta(doctype)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py\", line 65, in __init__\n    self.load_assets()\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py\", line 85, in load_assets\n    self.load_templates()\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/desk/form/meta.py\", line 259, in load_templates\n    module = load_doctype_module(self.name)\n  File \"/workspace/development/frappe-bench/apps/frappe/frappe/modules/utils.py\", line 245, in load_doctype_module\n    raise ImportError(\nImportError: Module import failed for Equipment Type (madkour_maintenance.madkour_maintenance.doctype.equipment_type.equipment_type Error: No module named 'frappe.db')\n"
}